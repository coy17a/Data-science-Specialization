ggplot(data = data2_long)+
aes( x = Date , y = energy, color = sub_metering)+
geom_line()
ggplot(data = data2_long)+
aes( x = Date , y = energy, color = sub_metering)+
geom_line()
ggplot(data = data2)+
aes( x = Date , y = Voltage)+
geom_line()
ggplot(data = data2)+
aes( x = Date , y = Global_reactive_power/1000)+
geom_line()
ggplot(data2)+
aes(x = Global_active_power)+
geom_histogram( bins = 12, color="black", fill = "red")+
labs(title = "Global Active Power", x = "Global Active Power (kilowatts)", y = "Frequency")
p1 <- ggplot(data = data2)+
aes( x = Date , y = Global_active_power)+
geom_line()
p2 <- data2_long <- gather(data2,"sub_metering","energy", 7:9)
p3 <- ggplot(data = data2_long)+
aes( x = Date , y = energy, color = sub_metering)+
geom_line()
p4 <- ggplot(data = data2)+
aes( x = Date , y = Voltage)+
geom_line()
p5 <- ggplot(data = data2)+
aes( x = Date , y = Global_reactive_power/1000)+
geom_line()
grid.arrange(p1,p2,p3,p4, nrow=2)
install.packages("gridExtra")
library(gridExtra)
p1 <- ggplot(data = data2)+
aes( x = Date , y = Global_active_power)+
geom_line()
p2 <- data2_long <- gather(data2,"sub_metering","energy", 7:9)
p3 <- ggplot(data = data2_long)+
aes( x = Date , y = energy, color = sub_metering)+
geom_line()
p4 <- ggplot(data = data2)+
aes( x = Date , y = Voltage)+
geom_line()
p5 <- ggplot(data = data2)+
aes( x = Date , y = Global_reactive_power/1000)+
geom_line()
grid.arrange(p1,p2,p3,p4, nrow=2)
p1 <- ggplot(data = data2)+
aes( x = Date , y = Global_active_power)+
geom_line()
p2 <- data2_long <- gather(data2,"sub_metering","energy", 7:9)
p3 <- ggplot(data = data2_long)+
aes( x = Date , y = energy, color = sub_metering)+
geom_line()
p4 <- ggplot(data = data2)+
aes( x = Date , y = Voltage)+
geom_line()
p5 <- ggplot(data = data2)+
aes( x = Date , y = Global_reactive_power/1000)+
geom_line()
grid.arrange(p1,p3,p4, nrow=2)
grid.arrange(p1,p3,p4,p5 nrow=2)
grid.arrange(p1,p3,p4,p5 ,nrow=2)
grid.arrange(p1,p4,p3,p5 ,nrow=2)
p3 <- ggplot(data = data2_long)+
aes( x = Date , y = energy, color = sub_metering)+
geom_line()+
theme(legend.position=c(0.8,0.8))
grid.arrange(p1,p4,p3,p5 ,nrow=2)
p1 <- ggplot(data = data2)+
aes( x = Date , y = Global_active_power)+
geom_line()+
scale_x_discrete(breaks=c(dmy_hms), labels=c("Thurs"))
grid.arrange(p1,p4,p3,p5 ,nrow=2)
ggplot(data = data2)+
aes( x = Date , y = Global_active_power)+
geom_line()+
scale_x_discrete(breaks=c(dmy_hms), labels=c("Thurs"))
ggplot(data = data2)+
aes( x = Date , y = Global_active_power)+
geom_line()+
scale_x_discrete(breaks=c(dmy_hms("2007-02-01 00:00:00")), labels=c("Thurs"))
ggplot(data = data2)+
aes( x = Date , y = Global_active_power)+
geom_line()+
scale_x_discrete(breaks=c(dmy_hms("2007-02-01 00:00:00"),dmy_hms("2007-02-01 00:12:00") ), labels=c("Thurs","Friday"))
choose(4,5)*0.5^4*(1-0.5)^1 +choose(5,5)*0.5^5
ppois(10,lamda=5*3)
ppois(10,lambda=5*3)
pbinom(7,size = 8, prob = 0.5)
pbinom(7,size = 8, prob = 0.5, lower.tail = FALSE)
pbinom(6,size = 8, prob = 0.5, lower.tail = FALSE)
pbinom(3,size = 5, prob = 0.5, lower.tail = FALSE)
x <- c(0.18, -1.5, 0.42, 0.95)
w <- c(2,1,3,1)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ x, -1)
data("mtcars")
lm(mtcars$mpg ~ mtcars$wt)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
z <- z-mean(x)
z <- x-mean(x)
stdn <- x/std(x)
stdn <- x/sd(x)
stdn <- z/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mena(x)
mean(x)
x <- c(0.18, -1.5, 0.42, 0.95)
w <- c(2,1,3,1)
weighted.mean(x,w)
mean(x)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
weighted.mean(x,w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ x, -1)
lm(x ~ y, -1)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ x, -1)
lm(y ~ x, 0)
coef(regr_line)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
regr_line <- lm(y ~ x +
coef(regr_line)
lm(y ~ x + 0)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ x + 0)
lm(y ~ x -1)
qt(0.95, 8
)
1100+1.85*30/9^1.5
1100+1.85*30/(9^1.5)
1100-1.85*30/(9^1.5)
1100-1.86*30/(9^1.5)
1100+1.86*30/(9^1.5)
1100-1.86*30/(3)
1100+1.86*30/(3)
1100-1.85*30/(3)
1100+1.85*30/(3)
9*3/1.85
2*3/1.85
qt(0.95,8,lower.tail = FALSE)
qt(0.95,8,lower.tail = TRUE)
qt(0.975,8,lower.tail = TRUE)
2*3/2.30
1100-2.60*30/(3)
1100+2.60*30/(3)
qt(0.95,18)
(x2-x1)/(0.60^2/10 + 0.68^2/10)^0.5
n <- 10
x <-3
s <- 0.60
x2 <- 5
s2 <- 0.68
(x2-x1)/(s^2/n + s2^2/n)^0.5
(x2-x)/(s^2/n + s2^2/n)^0.5
qt(0.95,18)
(s^2/n +s2^2/n)^0.5*1.73+2
(s^2/n +s2^2/n)^0.5*2.60+2
(s^2/n +s2^2/n)^0.5*2.608+2
2-(s^2/n +s2^2/n)^0.5*2.608
qnorm(0.95)
qnorm(0.9725)
n <- 100
x <-5
s <- 0.5
x2 <- 6
s2 <- 2
x-x2 + (s^2/n +s2^2/n)^0.5*1.918
x-x2 - (s^2/n +s2^2/n)^0.5*1.918
x2-x - (s^2/n +s2^2/n)^0.5*1.918
x2-x + (s^2/n +s2^2/n)^0.5*1.918
library(readr)
library(dplyr)
library(ggplot2)
data <- read_csv("repdata_data_StormData.csv.bz2")
names(data)
summary(data)
#---------------------------------------------------------------
#Harmful Events
by_event <- data %>%
select(EVTYPE, FATALITIES, INJURIES,STATE)%>%
filter(FATALITIES > 0 | INJURIES >0 )%>%
group_by(EVTYPE)%>%
summarize(FAT = sum(FATALITIES),INJ=sum(INJURIES))%>%
mutate( TOTAL = FAT + INJ)%>%
arrange(desc(TOTAL))%>%
#Events filter with more than 1000 Incidents
filter(TOTAL > 1000)
ggplot(by_event)+
aes(x=reorder(EVTYPE,-TOTAL),y= TOTAL)+
geom_bar(stat = "identity",fill="lightblue3")+
coord_flip()+
labs(y="Total Harmful Events", x = "",title="Weather Events Most Harmful to Population USA(1950-2011)")+
theme_minimal()
#---------------------------------------------------------------
#Property Damage
valid_ex<- c("M","m","B","H","h","K","k")
pdamage <- data %>%
select(EVTYPE,PROPDMG,PROPDMGEXP)%>%
filter(!is.na(PROPDMGEXP))%>%
group_by(PROPDMGEXP,EVTYPE)%>%
summarise(total = sum(PROPDMG))%>%
filter(PROPDMGEXP %in% valid_ex)
fromMtoB <- pdamage$PROPDMGEXP == "M" | pdamage$PROPDMGEXP == "m"
fromktoB <- pdamage$PROPDMGEXP == "K" | pdamage$PROPDMGEXP == "k"
fromhtoB <- pdamage$PROPDMGEXP == "H" | pdamage$PROPDMGEXP == "h"
pdamage$total[fromMtoB] <- pdamage$total[fromMtoB]/1000
pdamage$total[fromktoB] <- pdamage$total[fromktoB]/1000000
pdamage$total[fromhtoB] <- pdamage$total[fromhtoB]/1000000000
pdamageTotal <- pdamage %>%
group_by(EVTYPE) %>%
summarize(totalProp_damage = sum(total))%>%
arrange(desc(totalProp_damage))
#---------------------------------------------------------------
#cropDamage
cdamage <- data %>%
select(EVTYPE,CROPDMG,CROPDMGEXP)%>%
filter(CROPDMG >0)%>%
group_by(EVTYPE)%>%
summarise(totalCrop_damage = sum(CROPDMG)/1000000)%>%
arrange(desc(totalCrop_damage))
compilation <- left_join(pdamageTotal,cdamage,by="EVTYPE") %>%
#replace Na with 0
mutate_all(funs(replace(.,is.na(.),0))) %>%
mutate(Total = totalCrop_damage + totalProp_damage)
#Events filter with more than 2 billion in damage
ggplot(filter(compilation,compilation$Total > 2))+
aes(x=reorder(EVTYPE,-Total),y= Total)+
geom_bar(stat = "identity",fill="brown")+
coord_flip()+
labs(y="Total Cost in damage(Billions)", x = "",title="Weather Events Most Costly in USA(1950-2011)")+
theme_minimal()
setwd("~/Dropbox/usbBackup/WebCoy/data/R/JHDScoursera")
library(readr)
library(dplyr)
library(ggplot2)
data <- read_csv("repdata_data_StormData.csv.bz2")
names(data)
summary(data)
#---------------------------------------------------------------
#Harmful Events
by_event <- data %>%
select(EVTYPE, FATALITIES, INJURIES,STATE)%>%
filter(FATALITIES > 0 | INJURIES >0 )%>%
group_by(EVTYPE)%>%
summarize(FAT = sum(FATALITIES),INJ=sum(INJURIES))%>%
mutate( TOTAL = FAT + INJ)%>%
arrange(desc(TOTAL))%>%
#Events filter with more than 1000 Incidents
filter(TOTAL > 1000)
ggplot(by_event)+
aes(x=reorder(EVTYPE,-TOTAL),y= TOTAL)+
geom_bar(stat = "identity",fill="lightblue3")+
coord_flip()+
labs(y="Total Harmful Events", x = "",title="Weather Events Most Harmful to Population USA(1950-2011)")+
theme_minimal()
#---------------------------------------------------------------
#Property Damage
valid_ex<- c("M","m","B","H","h","K","k")
pdamage <- data %>%
select(EVTYPE,PROPDMG,PROPDMGEXP)%>%
filter(!is.na(PROPDMGEXP))%>%
group_by(PROPDMGEXP,EVTYPE)%>%
summarise(total = sum(PROPDMG))%>%
filter(PROPDMGEXP %in% valid_ex)
fromMtoB <- pdamage$PROPDMGEXP == "M" | pdamage$PROPDMGEXP == "m"
fromktoB <- pdamage$PROPDMGEXP == "K" | pdamage$PROPDMGEXP == "k"
fromhtoB <- pdamage$PROPDMGEXP == "H" | pdamage$PROPDMGEXP == "h"
pdamage$total[fromMtoB] <- pdamage$total[fromMtoB]/1000
pdamage$total[fromktoB] <- pdamage$total[fromktoB]/1000000
pdamage$total[fromhtoB] <- pdamage$total[fromhtoB]/1000000000
pdamageTotal <- pdamage %>%
group_by(EVTYPE) %>%
summarize(totalProp_damage = sum(total))%>%
arrange(desc(totalProp_damage))
#---------------------------------------------------------------
#cropDamage
cdamage <- data %>%
select(EVTYPE,CROPDMG,CROPDMGEXP)%>%
filter(CROPDMG >0)%>%
group_by(EVTYPE)%>%
summarise(totalCrop_damage = sum(CROPDMG)/1000000)%>%
arrange(desc(totalCrop_damage))
compilation <- left_join(pdamageTotal,cdamage,by="EVTYPE") %>%
#replace Na with 0
mutate_all(funs(replace(.,is.na(.),0))) %>%
mutate(Total = totalCrop_damage + totalProp_damage)
#Events filter with more than 2 billion in damage
ggplot(filter(compilation,compilation$Total > 2))+
aes(x=reorder(EVTYPE,-Total),y= Total)+
geom_bar(stat = "identity",fill="brown")+
coord_flip()+
labs(y="Total Cost in damage(Billions)", x = "",title="Weather Events Most Costly in USA(1950-2011)")+
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
ggplot(by_event)+
aes(x=reorder(EVTYPE,-TOTAL),y= TOTAL)+
geom_bar(stat = "identity",fill="lightblue3")+
coord_flip()+
labs(y="Total Harmful Events", x = "",title="Weather Events Most Harmful to Population USA(1950-2011)")+
theme_minimal()
ggplot(by_event)+
aes(x=reorder(EVTYPE,-TOTAL),y= TOTAL)+
geom_bar(stat = "identity",fill="lightblue3")+
coord_flip()+
labs(y="Total Harmful Events", x = "",title="Weather Events Most Harmful to Population USA(1950-2011)")+
theme_minimal()
ggplot(by_event)+
aes(x=reorder(EVTYPE,-TOTAL),y= TOTAL)+
geom_bar(stat = "identity",fill="lightblue3")+
coord_flip()+
labs(y="Total Harmful Events", x = "",title="Weather Events Most Harmful to Population USA(1950-2011)")+
theme_minimal()
View(by_event)
test <- by_event %>%
gather(key="Harm",value="Amount", 2:3)
library(tidyr)
test <- by_event %>%
gather(key="Harm",value="Amount", 2:3)
View(test)
ggplot(test)+
aes(x=EVTYPE,y= Amount, fill = Harm)+
geom_bar(stat = "identity",fill="lightblue3")+
coord_flip()+
labs(y="Total Harmful Events", x = "",title="Weather Events Most Harmful to Population USA(1950-2011)")+
theme_minimal()
ggplot(test)+
aes(x=EVTYPE,y= Amount, color = Harm)+
geom_bar(stat = "identity",fill="lightblue3")+
coord_flip()+
labs(y="Total Harmful Events", x = "",title="Weather Events Most Harmful to Population USA(1950-2011)")+
theme_minimal()
ggplot(test)+
aes(x=EVTYPE,y= Amount, fill() = Harm)+
geom_bar(stat = "identity")+
coord_flip()+
labs(y="Total Harmful Events", x = "",title="Weather Events Most Harmful to Population USA(1950-2011)")+
theme_minimal()
ggplot(test)+
aes(x=EVTYPE,y= Amount, fill= Harm)+
geom_bar(stat = "identity")+
coord_flip()+
labs(y="Total Harmful Events", x = "",title="Weather Events Most Harmful to Population USA(1950-2011)")+
theme_minimal()
ggplot(test)+
aes(x=reorder(EVTYPE,TOTAL),y= Amount, fill= Harm)+
geom_bar(stat = "identity")+
coord_flip()+
labs(y="Total Harmful Events", x = "",title="Weather Events Most Harmful to Population USA(1950-2011)")+
theme_minimal()
by_event <- data %>%
select(EVTYPE, FATALITIES, INJURIES,STATE)%>%
filter(FATALITIES > 0 | INJURIES >0 )%>%
group_by(EVTYPE)%>%
summarize(FAT = sum(FATALITIES),INJ=sum(INJURIES))%>%
mutate( TOTAL = FAT + INJ)%>%
arrange(desc(TOTAL))%>%
#Events filter with more than 1000 Incidents
filter(TOTAL > 1000) %>%
gather(key="Harm",value="Amount", 2:3)
ggplot(by_event)+
aes(x=reorder(EVTYPE,TOTAL),y= Amount, fill= Harm)+
geom_bar(stat = "identity")+
coord_flip()+
labs(y="Total Harmful Events", x = "",title="Weather Events Most Harmful to Population USA(1950-2011)")+
theme_minimal()
by_event <- data %>%
select(EVTYPE, FATALITIES, INJURIES,STATE)%>%
filter(FATALITIES > 0 | INJURIES >0 )%>%
group_by(EVTYPE)%>%
summarize(Fatalities = sum(FATALITIES),Injuries=sum(INJURIES))%>%
mutate( TOTAL = FAT + INJ)%>%
arrange(desc(TOTAL))%>%
#Events filter with more than 1000 Incidents
filter(TOTAL > 1000) %>%
gather(key="Harm",value="Amount", 2:3)
ggplot(by_event)+
aes(x=reorder(EVTYPE,TOTAL),y= Amount, fill= Harm)+
geom_bar(stat = "identity")+
coord_flip()+
labs(y="Total Harmful Events", x = "",title="Weather Events Most Harmful to Population USA(1950-2011)")+
theme_minimal()
by_event <- data %>%
select(EVTYPE, FATALITIES, INJURIES,STATE)%>%
filter(FATALITIES > 0 | INJURIES >0 )%>%
group_by(EVTYPE)%>%
summarize(Fatalities = sum(FATALITIES),Injuries=sum(INJURIES))%>%
mutate( TOTAL = Fatalities + Injuries)%>%
arrange(desc(TOTAL))%>%
#Events filter with more than 1000 Incidents
filter(TOTAL > 1000) %>%
gather(key="Harm",value="Amount", 2:3)
ggplot(by_event)+
aes(x=reorder(EVTYPE,TOTAL),y= Amount, fill= Harm)+
geom_bar(stat = "identity")+
coord_flip()+
labs(y="Total Harmful Events", x = "",title="Weather Events Most Harmful to Population USA(1950-2011)")+
theme_minimal()
View(compilation)
compilation <- left_join(pdamageTotal,cdamage,by="EVTYPE") %>%
#replace Na with 0
mutate_all(funs(replace(.,is.na(.),0))) %>%
mutate(Total = totalCrop_damage + totalProp_damage)%>%
gather(key="Type", value= "damage", 2:3)
#Events filter with more than 2 billion in damage
ggplot(filter(compilation,compilation$Total > 2))+
aes(x=reorder(EVTYPE,-Total),y= damage,fill=Type)+
geom_bar(stat = "identity")+
coord_flip()+
labs(y="Total Cost in damage(Billions)", x = "",title="Weather Events Most Costly in USA(1950-2011)")+
theme_minimal()
by_event <- data %>%
select(EVTYPE, FATALITIES, INJURIES,STATE)%>%
filter(FATALITIES > 0 | INJURIES >0 )%>%
group_by(EVTYPE)%>%
summarize(Fatalities = sum(FATALITIES),Injuries=sum(INJURIES))%>%
mutate( TOTAL = Fatalities + Injuries)%>%
arrange(desc(TOTAL))%>%
#Events filter with more than 1000 Incidents
filter(TOTAL > 1000) %>%
gather(key="Harm",value="Amount", 2:3)
by_event <- data %>%
select(EVTYPE, FATALITIES, INJURIES,STATE)%>%
filter(FATALITIES > 0 | INJURIES >0 )%>%
group_by(EVTYPE)%>%
summarize(Fatalities = sum(FATALITIES),Injuries=sum(INJURIES))%>%
mutate( TOTAL = Fatalities + Injuries)%>%
arrange(desc(TOTAL))%>%
#Events filter with more than 1000 Incidents
filter(TOTAL > 1000) %>%
gather(key="Harm",value="Amount", 2:3)
by_event <- data %>%
select(EVTYPE, FATALITIES, INJURIES,STATE)%>%
filter(FATALITIES > 0 | INJURIES >0 )%>%
group_by(EVTYPE)%>%
summarize(Fatalities = sum(FATALITIES),Injuries=sum(INJURIES))%>%
mutate( TOTAL = Fatalities + Injuries)%>%
arrange(desc(TOTAL))%>%
#Events filter with more than 1000 Incidents
filter(TOTAL > 1000)
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
data <- read_csv("repdata_data_StormData.csv.bz2")
names(data)
summary(data)
#---------------------------------------------------------------
#Harmful Events
by_event <- data %>%
select(EVTYPE, FATALITIES, INJURIES,STATE)%>%
filter(FATALITIES > 0 | INJURIES >0 )%>%
group_by(EVTYPE)%>%
summarize(Fatalities = sum(FATALITIES),Injuries=sum(INJURIES))%>%
mutate( TOTAL = Fatalities + Injuries)%>%
arrange(desc(TOTAL))%>%
#Events filter with more than 1000 Incidents
filter(TOTAL > 1000) %>%
gather(key="Harm",value="Amount", 2:3)
ggplot(by_event)+
aes(x=reorder(EVTYPE,TOTAL),y= Amount, fill= Harm)+
geom_bar(stat = "identity")+
coord_flip()+
labs(y="Total Harmful Events", x = "",title="Weather Events Most Harmful to Population USA(1950-2011)")+
theme_minimal()
#---------------------------------------------------------------
#Property Damage
valid_ex<- c("M","m","B","H","h","K","k")
pdamage <- data %>%
select(EVTYPE,PROPDMG,PROPDMGEXP)%>%
filter(!is.na(PROPDMGEXP))%>%
group_by(PROPDMGEXP,EVTYPE)%>%
summarise(total = sum(PROPDMG))%>%
filter(PROPDMGEXP %in% valid_ex)
fromMtoB <- pdamage$PROPDMGEXP == "M" | pdamage$PROPDMGEXP == "m"
fromktoB <- pdamage$PROPDMGEXP == "K" | pdamage$PROPDMGEXP == "k"
fromhtoB <- pdamage$PROPDMGEXP == "H" | pdamage$PROPDMGEXP == "h"
pdamage$total[fromMtoB] <- pdamage$total[fromMtoB]/1000
pdamage$total[fromktoB] <- pdamage$total[fromktoB]/1000000
pdamage$total[fromhtoB] <- pdamage$total[fromhtoB]/1000000000
pdamageTotal <- pdamage %>%
group_by(EVTYPE) %>%
summarize(totalProp_damage = sum(total))%>%
arrange(desc(totalProp_damage))
#---------------------------------------------------------------
#cropDamage
cdamage <- data %>%
select(EVTYPE,CROPDMG,CROPDMGEXP)%>%
filter(CROPDMG >0)%>%
group_by(EVTYPE)%>%
summarise(totalCrop_damage = sum(CROPDMG)/1000000)%>%
arrange(desc(totalCrop_damage))
compilation <- left_join(pdamageTotal,cdamage,by="EVTYPE") %>%
#replace Na with 0
mutate_all(funs(replace(.,is.na(.),0))) %>%
mutate(Total = totalCrop_damage + totalProp_damage)
#Events filter with more than 2 billion in damage
ggplot(filter(compilation,compilation$Total > 2))+
aes(x=reorder(EVTYPE,-Total),y= Total)+
geom_bar(stat = "identity",fill="brown")+
coord_flip()+
labs(y="Total Cost in damage(Billions)", x = "",title="Weather Events Most Costly in USA(1950-2011)")+
theme_minimal()
